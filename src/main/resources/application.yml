# DDL 자동생성
# 엔티티에 DB Schema 정보를 위의 어노테이션을 이용해 매핑해 놓았기 때문에 JPA를 통해 DDL을 자동 생성 할 수 있다.
# 하지만 실제 운영환경에서는 사용하기에 위험하다.
# create: 기존 테이블 삭제 후 새로 생성
# create-drop: 기존 테이블 삭제 후 새로 생성 + 어플리케이션 종료시 DDL 제거
# update: 테이블과 엔티티 매핑정보 비교 후 변경내용만 반영
# validate: (권장) 테이블과 엔티티 매핑정보 비교 후 변경사항 있는 경우 경고 출력. 어플리케이션 실행 안됨.

server:
  port: 9090

spring:
  datasource:
    url: jdbc:mysql://localhost:3306/jpabegin?useSSL=false&allowPublicKeyRetrieval=true&useUnicode=true&serverTimezone=Asia/Seoul&characterEncoding=UTF-8
    username: jpauser
    password: jpapass
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
#    database-platform: org.hibernate.dialect.MySQL8Dialect # deprecated
    open-in-view: false
    #    show-sql: true # 로그성임으로 false 로 두고 logging 설정에서 따로 설정하는 것이 좋다.

    properties:
      hibernate:
        format_sql: true
        ddl-auto: create
        default_batch_fetch_size: 1000 #최적화 옵션, 이 옵션은 왠만해서는 켜두는 것이 좋다. | In query 의 개수를 지정하는 옵션(Collection 의 Lazy Loading 에서 활용)

logging.level:
  org:
    hibernate:
      SQL: debug
